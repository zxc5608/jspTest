
1.factorial
재귀함수(메소드): 자기 자신을 호출하는 함수(메소드)

maven package 시 test코드 실행 스킵
mvn package -Dmaven.test.skip=true


HttpServletRequest: 사용자가 요청을 보낼때의 정보(파라미터, 헤더, 쿠키...)를 은닉화한 객체
					Servlet-container에서 생성
					Servlet-container가 생성하여 servlet메소드를 호출할때 사용되는 인자servlet(doXXX)
					
					
주요 사용 용도
	1. 파라미터 정보 확인
		.인위 조작이 불가
		getParameter는 존재하지만 setParameter메소드는 없음
		 ==> request클래스의 Wrapper클래스를 이용하여 파라미터 조작가능
		 
		
	2. 헤더 정보 확인 
	
	3. 속성 (attribute) 정보 설정, 조회
		.개발자가 인위 조작가능
		getAttribute, setAttribute 메소드 존재
		
	4.contextPath확인
		서블릿 + 컨텐츠 (js, css,image 등) 들의 집합
		
		webApplication = (유사) contextPath
		
		request.getContextPath();를 통해 contextPath문자열을 얻어올수있다.
		
		서버 하나에 여러개의 웹 어플리케이션을 서비스 하는 것이 가능
		==> url요청시 어떤 웹 어플리케이션을 의미하는 구분이 필요
		
		http://도메인/CONTEXT_PATH/경로
		
		==>css, javascript, image파일의 경로를 설정할때 사용
		
			jsp라는 이름으로 contextPath가 설정된 웹 어플리케이션의 경우
			webapp/image/brown.png파일의 경로를 다음과 같이 설정 할수있다.
			<img src ="/jsp/image/brown.png"/>
			
			==> jsp라는 이름의 컨텍스트 패스를 수정할 경우 링크와 관련된 부분을 모두 수정해야하는 문제점이 발생
			
				request.getContextPath()메소드를 통해 유지보수 문제 해결가능
				<img src="<%=request.getContextPath() %>/image/brown.png"/>
				
		webapp/jsp/request.jsp
		
		jsp파일 내용: request객체에서 제공하는 메소드와,메소드의 리턴값을 확인
		
		<body>
			request.getContentType() : 리턴값을 출력<br>
			request.getMethod():리턴값을 출력<br>
			request.getRequestURI():리턴값을 출력<br>
			request.getContextPath():리턴값을 출력<br>
			request.getServerPort():리턴값을 출력<br>
			
		</body>
				
		